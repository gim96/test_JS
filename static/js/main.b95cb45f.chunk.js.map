{"version":3,"sources":["components/home/Chart.js","components/home/ChartLine.js","components/home/Myapp.js","components/home/ChartLocal.js","components/home/ChartLineLocal.js","components/home/Local.js","components/home/Hospital.js","components/home/ChartTime.js","components/home/TimeLine.js","components/home/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Chart","props","state","charData","labels","datasets","label","borderWidth","data","g_totCases","g_death","g_rec","toFixed","backgroundColor","this","width","height","options","maintainAspectRatio","Component","ChartLine","g_newCases","Myapp","class","align","cellPadding","newCases_g","totCases_g","deathCases_g","recCases_g","ChartLocal","l_totCases","l_death","l_rec","ChartLineLocal","l_newCases","Local","newCases_l","totCases_l","deathCases_l","recCases_l","React","Hospital","loading","person","fetch","response","json","setState","border","scope","hospital_data","map","book","hospital","id","name","cumulative_local","cumulative_foreign","treatment_local","treatment_foreign","ChartTime","pcr_datax","i","pcr_data","length","push","date","count","TimeLine","total_pcr_testing_count","daily_pcr_testing_data","Footer","timeStamp","href","App","global_new_cases","global_total_cases","global_deaths","global_recovered","local_new_cases","local_total_cases","local_deaths","local_recovered","colSpan","hos","hos_data","update_date_time","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b95cb45f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\n\r\nexport default class Chart extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n\r\n            charData:{\r\n\r\n                    labels:['Active Cases (%)','Deaths (%)','Recovered (%)'],\r\n                    datasets:[\r\n                        \r\n                            {\r\n\r\n                                label:'population',\r\n                                borderWidth: 1,\r\n                                data: \r\n                                    [\r\n                                       \r\n                                        ((this.props.g_totCases-this.props.g_death-this.props.g_rec)/(this.props.g_totCases)*100).toFixed(2),\r\n                                        ((this.props.g_death)/(this.props.g_totCases)*100).toFixed(2),\r\n                                        ((this.props.g_rec)/(this.props.g_totCases)*100).toFixed(2)\r\n                                      \r\n                                    ],\r\n\r\n                                backgroundColor:['rgb(255, 193, 7 )','rgb(211, 47, 47 )','rgb(139, 195, 74 )']\r\n\r\n                            }\r\n                   \r\n                        ]   \r\n\r\n                    }\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div>\r\n                <Pie\r\n\r\n                    data={this.state.charData}\r\n                    width={100}\r\n                     height={250}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                 />\r\n             \r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n ","import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nexport default class ChartLine extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n\r\n            charData:{\r\n\r\n                    labels:['New Cases','Total Cases','Deaths','Recovered'],\r\n                    datasets:[\r\n                        \r\n                            {\r\n\r\n                                label:'All cases',\r\n                                borderWidth: 1,\r\n                                data:\r\n                                    [\r\n                                        this.props.g_newCases,\r\n                                        this.props.g_totCases,\r\n                                        this.props.g_death,\r\n                                        this.props.g_rec\r\n                                      \r\n                                    ],\r\n\r\n                                backgroundColor:['rgb(233,114,77)','rgb(146,202,209)','rgb(134,134,134)','rgb((214,215,39)']\r\n\r\n                            }\r\n                   \r\n                        ]   \r\n\r\n                    }\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div>\r\n                \r\n                \r\n                <Bar\r\n            \r\n                    data={this.state.charData}\r\n                    width={100}\r\n                     height={400}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                 />\r\n             \r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n ","import React, { Component } from 'react';\r\n\r\nimport Chart from './Chart';\r\nimport ChartLine from './ChartLine';\r\n\r\nexport default class Myapp extends Component {\r\n  \r\n  render() {\r\n                                                                                                                                                                                                 \r\n\r\n    return (\r\n      <div class=\"card\">\r\n        <div align=\"center\" class=\"card-header\"><h5>Global</h5></div>\r\n        <br></br>\r\n        <br></br>\r\n      \r\n        <table align='center' width='80%' cellPadding='5'>\r\n          <tr>\r\n            <td align='left'>\r\n            \r\n           <div class=\"card text-white bg-secondary mb-3\">\r\n           <div class=\"card-header\" align='center'>New </div>\r\n           <div class=\"card-body\">\r\n          <h5 class=\"card-title\" align='center'>{this.props.newCases_g}</h5>\r\n           </div>\r\n           </div>\r\n              </td>\r\n            <td align='left'>\r\n            <div class=\"card bg-light mb-3\">\r\n           <div class=\"card-header\" align='center'> Confirmed</div>\r\n           <div class=\"card-body\">\r\n          <h5 class=\"card-title\" align='center'>{this.props.totCases_g}</h5>\r\n           </div>\r\n           </div>\r\n\r\n            </td>\r\n            <td>\r\n            <div class=\"card bg-light mb-3\">\r\n           <div class=\"card-header\" align='center'>Deaths</div>\r\n           <div class=\"card-body\">\r\n          <h5 class=\"card-title\" align='center'>{this.props.deathCases_g}</h5>\r\n           </div>\r\n           </div>\r\n            </td>\r\n            <td>\r\n            <div class=\"card bg-light mb-3\">\r\n           <div class=\"card-header\" align='center'>Recovered</div>\r\n           <div class=\"card-body\">\r\n          <h5 class=\"card-title\" align='center'>{this.props.recCases_g}</h5>\r\n           </div>\r\n           </div>\r\n            </td>\r\n          </tr>\r\n       \r\n        </table>\r\n\r\n        <hr></hr>\r\n        <br></br>\r\n        \r\n        <table align='center' width='80%'>\r\n          <tr>\r\n            <td>\r\n            <ChartLine\r\n\r\n          g_newCases={this.props.newCases_g}\r\n          g_totCases={this.props.totCases_g}\r\n          g_death={this.props.deathCases_g}\r\n          g_rec={this.props.recCases_g}\r\n          />\r\n            </td>\r\n          </tr>\r\n        </table>\r\n       \r\n         <br></br>\r\n         <hr></hr>\r\n         \r\n        <Chart \r\n          \r\n          \r\n\r\n          g_newCases={this.props.newCases_g}\r\n          g_totCases={this.props.totCases_g}\r\n          g_death={this.props.deathCases_g}\r\n          g_rec={this.props.recCases_g}\r\n\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\n\r\nexport default class ChartLocal extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n\r\n            charData:{\r\n\r\n                    labels:['Active Cases (%)','Deaths (%)','Recovered (%)'],\r\n                    datasets:[\r\n                        \r\n                            {\r\n\r\n                                label:'All cases',\r\n                                borderWidth: 1,\r\n                                data:\r\n                                    [\r\n                                \r\n                                        ((this.props.l_totCases-this.props.l_death-this.props.l_rec)/ (this.props.l_totCases)*100).toFixed(2),\r\n                                        ((this.props.l_death)/ (this.props.l_totCases)*100).toFixed(2),\r\n                                        ((this.props.l_rec)/ (this.props.l_totCases)*100).toFixed(2)\r\n                                      \r\n                                    ],\r\n\r\n                                    backgroundColor:['rgb(255, 193, 7 )','rgb(211, 47, 47 )','rgb(139, 195, 74 )']\r\n\r\n                            }\r\n                   \r\n                        ]   \r\n\r\n                    }\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div>\r\n\r\n            \r\n                <Pie\r\n                \r\n                    data={this.state.charData}\r\n                    width={100}\r\n                     height={250}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                 />\r\n             \r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n ","import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nexport default class ChartLineLocal extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n\r\n            charData:{\r\n\r\n                    labels:['New','Active','Deaths','Recovered'],\r\n                    datasets:[\r\n                        \r\n                            {\r\n\r\n                                label:'All cases',\r\n                                borderWidth: 1,\r\n                                data:\r\n                                    [\r\n                                        this.props.l_newCases,\r\n                                        this.props.l_totCases,\r\n                                        this.props.l_death,\r\n                                        this.props.l_rec\r\n                                      \r\n                                    ],\r\n\r\n                                backgroundColor:['rgb(0, 191, 255)','rgb(0, 64, 255)','rgb(255, 0, 64)','rgb(255, 255, 0)']\r\n\r\n                            }\r\n                   \r\n                        ]   \r\n\r\n                    }\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div>\r\n\r\n            \r\n                <Bar\r\n                \r\n                    data={this.state.charData}\r\n                    width={100}\r\n                     height={400}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                 />\r\n             \r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n ","import React from \"react\";\r\nimport ChartLocal from './ChartLocal';\r\nimport ChartLineLocal from './ChartLineLocal';\r\n\r\nexport default class Local extends React.Component {\r\n\r\n  \r\n  render() {\r\n  \r\n\r\n    return (\r\n      <div class=\"card\">\r\n        <div align=\"center\" class=\"card-header\"><h5>Local</h5></div>\r\n        <br></br>\r\n        <br></br>\r\n        <table align='center' cellPadding='5' width='80%'>\r\n          <tr>\r\n            <td width='25%'>\r\n            <div class=\"card text-white bg-secondary mb-3\">\r\n           <div class=\"card-header\" align='center'>New</div>\r\n           <div class=\"card-body\">\r\n          <h5 class=\"card-title\" align='center'>{this.props.newCases_l}</h5>\r\n           </div>\r\n           </div>\r\n            </td>\r\n            <td width='25%'>\r\n            <div class=\"card bg-light mb-3\" >\r\n           <div class=\"card-header\" align='center'> Confirmed</div>\r\n           <div class=\"card-body\">\r\n          <h5 class=\"card-title\" align='center'>{this.props.totCases_l}</h5>\r\n           </div>\r\n           </div>\r\n            </td>\r\n            <td width='25%'>\r\n            <div class=\"card bg-light mb-3\">\r\n           <div class=\"card-header\" align='center'> Deaths</div>\r\n           <div class=\"card-body\">\r\n          <h5 class=\"card-title\" align='center'>{this.props.deathCases_l}</h5>\r\n           </div>\r\n           </div>\r\n           </td>\r\n           <td width='25%'>\r\n           <div class=\"card bg-light mb-3\">\r\n           <div class=\"card-header\" align='center'> Recovered</div>\r\n           <div class=\"card-body\">\r\n          <h5 class=\"card-title\" align='center'>{this.props.recCases_l}</h5>\r\n           </div>\r\n           </div>\r\n           </td>\r\n          </tr>\r\n        </table>\r\n        \r\n       \r\n        <hr></hr>\r\n        <br></br>\r\n        <table align='center' width='80%'>\r\n          <tr>\r\n            <td >\r\n            <ChartLineLocal \r\n\r\nl_newCases={this.props.newCases_l}\r\nl_totCases={this.props.totCases_l}\r\nl_death={this.props.deathCases_l}\r\nl_rec={this.props.recCases_l}\r\n\r\n  />\r\n            </td>\r\n          </tr>\r\n        </table>\r\n       \r\n        <br></br>\r\n        <hr></hr>\r\n        \r\n        <ChartLocal \r\n\r\n            l_newCases={this.props.newCases_l}\r\n            l_totCases={this.props.totCases_l}\r\n            l_death={this.props.deathCases_l}\r\n            l_rec={this.props.recCases_l}\r\n        \r\n        />\r\n        <br></br>\r\n        <br></br>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\n\r\nexport default class Hospital extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    person: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://www.hpb.health.gov.lk/api/get-current-statistical\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({ person: data, loading: false });\r\n   // console.log(person);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading...</div>;\r\n    }\r\n\r\n    if (!this.state.person) {\r\n      return <div>didn't get a person</div>;\r\n    }\r\n\r\n    return ( \r\n      <div class=\"card\">\r\n          \r\n        <div align=\"center\" class=\"card-header\">Hospitals Details</div>\r\n        <br></br>\r\n        <table border='1' width='50%' align='center' class=\"table table-bordered\" >\r\n        <tr>\r\n            <th scope=\"col\"> No</th>\r\n            <th scope=\"col\"> Name</th>\r\n            <th scope=\"col\"> Cumulative Local</th>\r\n            <th scope=\"col\"> Cumulative Foreign</th>\r\n            <th scope=\"col\"> Treatment Local</th>\r\n            <th scope=\"col\"> Treatment Foreign</th>\r\n        </tr>\r\n        {\r\n       \r\n        this.state.person.data.hospital_data.map(book => (\r\n        <tr>\r\n            <td>{book.hospital.id} </td>\r\n            <td>{book.hospital.name}  </td>\r\n            <td>{book.cumulative_local}</td>\r\n            <td>{book.cumulative_foreign}</td>\r\n            <td>{book.treatment_local}</td>\r\n            <td>{book.treatment_foreign}</td>\r\n        </tr>\r\n            \r\n          \r\n            \r\n        ))\r\n        }\r\n\r\n        \r\n        </table>\r\n         \r\n           \r\n          \r\n          \r\n       \r\n        <br></br>\r\n     \r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nexport default class ChartTime extends Component{\r\n\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n       \r\n        let pcr_datax = [];\r\n\r\n        for (let i = 0; i < this.props.pcr_data.length; i += 10) {\r\n          pcr_datax.push({\r\n            date: this.props.pcr_data[i].date,\r\n            count: this.props.pcr_data[i].count,\r\n            backgroundColor: \"rgb(214,212,228)\",\r\n          });\r\n        }\r\n      \r\n        this.state = {\r\n\r\n            charData:{\r\n\r\n                labels: pcr_datax.map((data) => data.date),\r\n                        \r\n\r\n                    datasets:[\r\n                        \r\n                            {\r\n\r\n                                label:'Active',\r\n                                borderWidth: 1,\r\n                                data: pcr_datax.map((data) => data.count),\r\n\r\n                                backgroundColor: pcr_datax.map((data) => data.backgroundColor),\r\n\r\n                            }\r\n                   \r\n                        ]   \r\n\r\n                    }\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div>\r\n                 \r\n                 <table align='center' width='80%'>\r\n                     <tr>\r\n                         <td>\r\n                         <Bar\r\n            \r\n                             data={this.state.charData}\r\n                             width={100}\r\n                                height={400}\r\n                             options={{\r\n                             maintainAspectRatio: false\r\n                             }}\r\n                         />\r\n                         </td>\r\n                     </tr>\r\n                 </table>\r\n                \r\n              \r\n             \r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n ","import React, { Component } from 'react';\r\n\r\nimport ChartTime from './ChartTime';\r\n\r\n\r\nexport default class TimeLine extends Component {\r\n  state = {\r\n    loading: true,\r\n    person: null\r\n\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://www.hpb.health.gov.lk/api/get-current-statistical\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({ person: data, loading: false });\r\n   // console.log(person);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading...</div>;\r\n    }\r\n\r\n    if (!this.state.person) {\r\n      return <div>didn't get a person</div>;\r\n    }                                                                                                                                                                                                      \r\n\r\n    return (\r\n      <div class=\"card\">\r\n        <div align=\"center\" class=\"card-header\">Daliy Test</div>\r\n        <br></br>\r\n        <br></br>\r\n        <table align=\"center\" width='30%'>\r\n            <tr>\r\n                <td> <div class=\"card bg-light mb-3\">\r\n           <div class=\"card-header\" align='center'> Total Testing Count</div>\r\n           <div class=\"card-body\">\r\n          <h5 class=\"card-title\" align='center'>{this.state.person.data.total_pcr_testing_count}</h5>\r\n           </div>\r\n           </div></td>\r\n            </tr>\r\n        </table>\r\n       \r\n        \r\n             \r\n        <br></br>\r\n        \r\n         <ChartTime \r\n         \r\n           pcr_data={this.state.person.data.daily_pcr_testing_data}\r\n         \r\n         \r\n         />\r\n         <br></br>\r\n         <br></br>\r\n      \r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\n\r\nexport default class Footer extends Component {\r\n  \r\n\r\n  render() {\r\n                                                                                                                                                                                             \r\n\r\n    return (\r\n          <div>\r\n\r\n        <br></br>\r\n       <center> \r\n         <table align=\"center\" width='50%' >\r\n          <tr>\r\n            <td align='center'>  Last Update : {this.props.timeStamp}    </td>\r\n          </tr>\r\n          <tr>\r\n            <td align='center'>Source :<a href='https://arimaclanka.com/'> www.arimac.com</a>  </td>\r\n           \r\n          </tr>\r\n          <tr>\r\n          <td align='center'>Developer : Gim kelum  </td>\r\n          </tr>\r\n        </table></center>\r\n     \r\n      \r\n      \r\n       \r\n\r\n       \r\n      </div>\r\n     \r\n       \r\n        \r\n       \r\n        \r\n       \r\n       \r\n            \r\n\r\n\r\n        \r\n    \r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\nimport Myapp from './components/home/Myapp';\nimport Local from './components/home/Local';\nimport Hospital from './components/home/Hospital';\nimport TimeLine from './components/home/TimeLine';\nimport Footer from './components/home/Footer';\n//import Ex from './components/home/Ex';\n\n\n\n\nclass App extends Component{\n\n  state = {\n    loading: true,\n    person: null,\n    \n  };\n\n  async componentDidMount() {\n    const url = \"https://www.hpb.health.gov.lk/api/get-current-statistical\";\n    const response = await fetch(url);\n    const data = await response.json();\n  //  const obj=JSON.parse(data);\n   // const arr=[];\n  \n    this.setState({ person: data, loading: false });\n   // console.log(person);\n\n  \n  }\n  \n  render(){\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n\n    if (!this.state.person) {\n      return <div>didn't get a person</div>;\n    }\n\n    return(\n      <>\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container\">\n    <a href='http://localhost:3000' class=\"navbar-brand\">COVID-19 Dashboard</a>\n  </div>\n</nav>\n      \n      <br></br>\n      <br></br>\n\n     \n      <table align=\"center\" cellPadding=\"5\" width='85%' >\n       \n       <tr>\n      \n       </tr>\n        <tr>\n       \n        <td width='50%' >\n          <Myapp \n\n       newCases_g= {this.state.person.data.global_new_cases}\n       totCases_g=  {this.state.person.data.global_total_cases}\n       deathCases_g=  {this.state.person.data.global_deaths}\n       recCases_g=  {this.state.person.data.global_recovered}\n   \n        />\n        </td>\n        <td width='50%'>\n          <Local\n\n            newCases_l={this.state.person.data.local_new_cases}\n            totCases_l={this.state.person.data.local_total_cases}\n            deathCases_l={this.state.person.data.local_deaths}\n            recCases_l={this.state.person.data.local_recovered}\n          \n          />\n        \n        </td>\n        \n         \n       \n        </tr>  \n          <tr>\n         \n          </tr>\n          <tr>\n        \n          </tr>\n          <tr>\n          <td colSpan='2'>\n         <TimeLine />\n          </td>\n          </tr>\n\n          <tr>\n          <td colSpan='2'><Hospital\n\n            hos={this.state.person.data.hospital_data}\n            hos_data={this.state.person.data.hospital_data.hospital}\n          \n          /></td>\n          </tr>\n         \n        <tr>\n        <td colSpan='2'>\n          <Footer \n        \n        timeStamp={this.state.person.data.update_date_time}\n        \n        />\n        </td>\n        </tr>\n      </table>\n\n      <br></br>\n     \n     \n      </>\n     \n    );\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}